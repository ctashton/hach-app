{"ast":null,"code":"var _jsxFileName = \"/Users/caylathomas/Desktop/code/projects/new/ChefApp/client/src/withAuth.jsx\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nexport default function withAuth(ComponentToProtect) {\n  return class extends Component {\n    constructor() {\n      super();\n      this.state = {\n        loading: true,\n        redirect: false\n      };\n    }\n\n    componentDidMount() {\n      if (sessionStorage.getItem('token') === null) {\n        this.setState({\n          loading: false,\n          redirect: true\n        });\n      } else {\n        this.setState({\n          loading: false,\n          redirect: false\n        });\n      } // fetch('/checkToken')\n      //   .then(res => {\n      //     if (res.status === 200) {\n      //       this.setState({ loading: false });\n      //     } else {\n      //       const error = new Error(res.error);\n      //       throw error;\n      //     }\n      //   })\n      //   .catch(err => {\n      //     console.error(err);\n      //     this.setState({ loading: false, redirect: true });\n      //   });\n\n    }\n\n    render() {\n      const _this$state = this.state,\n            loading = _this$state.loading,\n            redirect = _this$state.redirect;\n\n      if (loading) {\n        return null;\n      }\n\n      if (redirect) {\n        return React.createElement(Redirect, {\n          to: \"/Login\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(ComponentToProtect, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      })));\n    }\n\n  };\n}","map":{"version":3,"sources":["/Users/caylathomas/Desktop/code/projects/new/ChefApp/client/src/withAuth.jsx"],"names":["React","Component","Redirect","withAuth","ComponentToProtect","constructor","state","loading","redirect","componentDidMount","sessionStorage","getItem","setState","render","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,eAAe,SAASC,QAAT,CAAkBC,kBAAlB,EAAsC;AACnD,SAAO,cAAcH,SAAd,CAAwB;AAC7BI,IAAAA,WAAW,GAAG;AACZ;AACA,WAAKC,KAAL,GAAa;AACXC,QAAAA,OAAO,EAAE,IADE;AAEXC,QAAAA,QAAQ,EAAE;AAFC,OAAb;AAID;;AACDC,IAAAA,iBAAiB,GAAG;AAClB,UAAGC,cAAc,CAACC,OAAf,CAAuB,OAAvB,MAAoC,IAAvC,EAA4C;AAC1C,aAAKC,QAAL,CAAc;AAAEL,UAAAA,OAAO,EAAE,KAAX;AAAkBC,UAAAA,QAAQ,EAAE;AAA5B,SAAd;AACD,OAFD,MAEO;AACL,aAAKI,QAAL,CAAc;AAAEL,UAAAA,OAAO,EAAE,KAAX;AAAkBC,UAAAA,QAAQ,EAAE;AAA5B,SAAd;AACD,OALiB,CAMlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACD;;AACDK,IAAAA,MAAM,GAAG;AAAA,0BACuB,KAAKP,KAD5B;AAAA,YACCC,OADD,eACCA,OADD;AAAA,YACUC,QADV,eACUA,QADV;;AAEP,UAAID,OAAJ,EAAa;AACX,eAAO,IAAP;AACD;;AACD,UAAIC,QAAJ,EAAc;AACZ,eAAO,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AACD,aACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,kBAAD,oBAAwB,KAAKM,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,CADF;AAKD;;AAzC4B,GAA/B;AA2CD","sourcesContent":["import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nexport default function withAuth(ComponentToProtect) {\n  return class extends Component {\n    constructor() {\n      super();\n      this.state = {\n        loading: true,\n        redirect: false,\n      };\n    }\n    componentDidMount() {\n      if(sessionStorage.getItem('token') === null){\n        this.setState({ loading: false, redirect: true })\n      } else { \n        this.setState({ loading: false, redirect: false})\n      }\n      // fetch('/checkToken')\n      //   .then(res => {\n      //     if (res.status === 200) {\n      //       this.setState({ loading: false });\n      //     } else {\n      //       const error = new Error(res.error);\n      //       throw error;\n      //     }\n      //   })\n      //   .catch(err => {\n      //     console.error(err);\n      //     this.setState({ loading: false, redirect: true });\n      //   });\n    }\n    render() {\n      const { loading, redirect } = this.state;\n      if (loading) {\n        return null;\n      }\n      if (redirect) {\n        return <Redirect to=\"/Login\" />;\n      }\n      return (\n        <React.Fragment>\n          <ComponentToProtect {...this.props} />\n        </React.Fragment>\n      );\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}